
TODO
====
- operator == for Type
- operator == for Variant
- Implement function to set named values from Type (using template function and hasType())


AbstractBaseType
|-- MetaType
|-- NullType
|-- BaseTypeImpl<T, ET>
    |-- BaseTypeImplGeneric<T>
    |-- BaseTypeImplBool<T>
    |-- BaseTypeImplNumber<T>
        |-- BaseTypeImplSignedIntegral<T>
        |-- BaseTypeImplUnsignedIntegral<T>
        |-- BaseTypeImplFloatingPoint<T>
    |-- BaseTypeImplString<T>
    |-- BaseTypeImplEnum<T>
    |-- BaseTypeImplContainer<T, ET>
        |-- BaseTypeImplArray<T>
        |-- BaseTypeImplVector<T>
        |-- BaseTypeImplMap<T>
...
  |-- BaseType<T>

AbstractTyped
|-- Type
    |-- ConcreteType<T>
|-- Variant
|-- AbstractValueContainer
    |-- ValueContainer<T>
        |-- InternalValue<T>
        |-- ExternalValue<T>
    |-- AbstractProperty
        |-- Property<T>
        |-- Slot<T>
